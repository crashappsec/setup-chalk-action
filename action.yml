name: Setup Chalk
description: Install chalk and wrap supported commands

inputs:
  version:
    description: |
      Version of chalk to install.
      By default latest version is installed.
      See https://crashoverride.com/releases for all available versions.
    required: false
    default: ""
  load:
    description: |
      Chalk config(s) to load - comma or new-line delimited.
      Can be either paths to files or URLs.
    required: false
  params:
    description: |
      Chalk components params to load.
      Should be JSON array with all parameter values.
      JSON structure is the same as provided by
      'chalk dump params'.
    required: false
  connect:
    description: |
      Whether to automatically connect to https://crashoverride.run.
    required: false
  profile:
    description: Key of the custom CrashOverride profile to load.
    required: false
    default: default
  token:
    description: |
      CrashOverride API Token.
      It is automatically fetched via OpenID connect if not provided when `connect=true`.
    required: false
  password:
    description: |
      Password for chalk signing key.
      Password is displayed as part of `chalk setup`.
    required: false
  public_key:
    description: |
      Content of chalk signing public key).
      Copy from `chalk.pub` after `chalk setup`.
    required: false
  private_key:
    description: |
      Content of chalk signing encrypted private key (with the provided password).
      Copy from `chalk.key` after `chalk setup`.
    required: false
  observables_version:
    description: |
      Version of the observables action to use. Defaults to main.
    required: false
    default: main

runs:
  using: "composite"
  steps:
    - name: Set chalk prefix for non-container builds
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS') && job.container.id == ''
      shell: sh
      run: |
        echo "CHALK_PREFIX=$HOME/.chalk/" >> $GITHUB_ENV

    - name: Set chalk prefix for container builds
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS') && job.container.id != ''
      shell: sh
      run: |
        echo "CHALK_PREFIX=/usr/local" >> $GITHUB_ENV

    - name: Add Chalk to PATH
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: sh
      run: |
        echo "$CHALK_PREFIX/bin" >> $GITHUB_PATH

    - name: Hide provided JWT token
      if: env.__CHALK_ALREADY_SETUP__ == '' && inputs.token != ''
      shell: sh
      working-directory: ${{ github.action_path }}
      run: |
        echo "::add-mask::${{ inputs.token }}"

    - name: Hide provided password
      if: env.__CHALK_ALREADY_SETUP__ == '' && inputs.password != ''
      shell: sh
      working-directory: ${{ github.action_path }}
      run: |
        echo "::add-mask::${{ inputs.password }}"

    # https://docs.sigstore.dev/system_config/installation/
    - name: Install cosign
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS')
      uses: sigstore/cosign-installer@main
      # most likely bash is missing
      # https://github.com/sigstore/cosign-installer/issues/190
      continue-on-error: true

    - name: Set CHALK_PASSWORD
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS') && inputs.password != ''
      shell: sh
      run: |
        echo "CHALK_PASSWORD=${{ inputs.password }}" >> $GITHUB_ENV

    - name: Save Public Key
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS') && inputs.public_key != ''
      shell: sh
      working-directory: ${{ github.action_path }}
      env:
        CHALK_PUBLIC_KEY: "${{ inputs.public_key }}"
      run: |
        printenv CHALK_PUBLIC_KEY > chalk.pub

    - name: Save Private Key
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS') && inputs.private_key != ''
      shell: sh
      working-directory: ${{ github.action_path }}
      env:
        CHALK_PRIVATE_KEY: "${{ inputs.private_key }}"
      run: |
        printenv CHALK_PRIVATE_KEY > chalk.key

    - name: Determine Action Path
      id: action_path
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: sh
      working-directory: ${{ github.action_path }}
      run: |
        echo "value=$(pwd)" >> $GITHUB_OUTPUT

    - name: Set up chalk
      id: chalk
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: sh
      run: |
        ${{ steps.action_path.outputs.value }}/setup.sh \
          --version='${{ inputs.version }}' \
          --load='${{ inputs.load }}' \
          --params='${{ inputs.params }}' \
          --token='${{ inputs.token }}' \
          --profile='${{ inputs.profile }}' \
          ${{ inputs.connect == 'true' && '--connect' || '' }} \
          ${{ inputs.public_key != '' && format('--public-key={0}/chalk.pub', steps.action_path.outputs.value) || '' }} \
          ${{ inputs.private_key != '' && format('--private-key={0}/chalk.key', steps.action_path.outputs.value) || '' }} \
          ${{ runner.debug == '1' && '--debug' || '' }}

    # github doesnt support using inputs for the action version
    # so we template inline action
    - name: Template set up build observables action
      if: env.__CHALK_ALREADY_SETUP__ == '' && runner.os == 'Linux' && steps.chalk.outputs.setup_build_observables == 'true'
      shell: sh
      run: |
        path=.tmp-observe
        mkdir -p $path
        cat <<EOF > $path/action.yml
        runs:
          using: composite
          steps:
          - shell: sh
            run: rm -rf $path
          - uses: crashappsec/setup-chalk-build-observables@${{ inputs.observables_version }}
            with:
              curiosity_archive_url: ${{ steps.chalk.outputs.curiosity_archive_url }}
        EOF

    - name: Set up build observables
      if: env.__CHALK_ALREADY_SETUP__ == '' && runner.os == 'Linux' && steps.chalk.outputs.setup_build_observables == 'true'
      uses: ./.tmp-observe
      continue-on-error: true

    # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
    # in some cases chalk needs to auth to GitHub API and it requires
    # GITHUB_TOKEN env variable to be present
    # Note that by default this env var is not accessible unless it is accessed
    # by a secret - either 1) ${{ secrets.GITHUB_TOKEN }} or 2) ${{ github.token }}
    # However as chalk can be invoked anywhere downstream of this action setting up chalk
    # (e.g. by calling docker build from docker push action)
    # we cannot guarantee that GITHUB_TOKEN is going to be accessible at that time
    # and so we export it here to ensure chalk can succeed with its metadata collection
    - name: Export GITHUB_TOKEN
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: sh
      run: |
        [ -z "$GITHUB_TOKEN" ] && echo "GITHUB_TOKEN=${{ github.token }}" >> $GITHUB_ENV

    - name: Set chalk was already setup to avoid duplicate setups
      if: env.__CHALK_ALREADY_SETUP__ == '' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: sh
      run: |
        echo "__CHALK_ALREADY_SETUP__=true" >> $GITHUB_ENV
